/* 66b11e9f95110cc994e23a631f4b90bea760db6f
 * This file is automatically generated by graphql-let. */

export declare type Maybe<T> = T | null;
export declare type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
export declare type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]?: Maybe<T[SubKey]>;
};
export declare type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export declare type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
};
export declare type Auth = {
    __typename?: 'Auth';
    isAuthenticated: Scalars['Boolean'];
    user: User;
    userFullName: Scalars['String'];
};
export declare type User = {
    __typename?: 'User';
    gender: Scalars['String'];
    name: UserName;
};
export declare type UserName = {
    __typename?: 'UserName';
    title: Scalars['String'];
    first: Scalars['String'];
    last: Scalars['String'];
};
export declare type Query = {
    __typename?: 'Query';
    viewer: OldUser;
    auth: Auth;
};
export declare type Mutation = {
    __typename?: 'Mutation';
    updateName: OldUser;
    signIn: Auth;
};
export declare type MutationUpdateNameArgs = {
    name: Scalars['String'];
};
export declare type MutationSignInArgs = {
    name?: Maybe<Scalars['String']>;
};
export declare type OldUser = {
    __typename?: 'OldUser';
    id: Scalars['ID'];
    name: Scalars['String'];
    status: Scalars['String'];
};
export declare type PartialFragment = ({
    __typename?: 'OldUser';
} & Pick<OldUser, 'id' | 'name'>);
export declare const PartialFragmentDoc: import("@apollo/client").DocumentNode;
